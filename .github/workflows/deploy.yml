---

name: Deploy

on:
  deployment:

concurrency: 
  # Only one concurrent deployment per branch.
  group: deploy-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  start:
    name: "Start"
    runs-on: ubuntu-latest
    steps:
      - name: Generate spicy-proton name
        if: github.event.deployment.environment == "spicy-proton"
        id: spicy_proton_name
        uses: ScriptHero/action-spicy-proton-generator@v1
        with:
          name: ${{ github.event.deployment.ref }}

      - name: Set deployment status to "in progress"
        uses: avakar/set-deployment-status@v1.1.0
        with:
          state: in_progress
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: TODO Deploy
        run: sleep 10
          # optimally this will return an output containing the site URL

      - name: Deactivate previous spicy-proton deployments for this branch
        if: github.event.deployment.environment == "spicy-proton"
        uses: actions/github-script@v4
        # Since we use the same "spicy-proton" environment for all branch deployments,
        # we don't want all older deployments in the same environment to be deactivated
        # on successful deployment. But we _do_ want the previous deployments in the same branch
        # to be deactivated, since they point to a previous commit in the branch.
        env:
          BRANCH_NAME: ${{ github.head_ref }}
          THIS_DEPLOYMENT_ID: ${{ github.event.deployment.id}}
        with:
          previews: ant-man
          script: |
            const { BRANCH_NAME, THIS_DEPLOYMENT_ID } = process.env;

            const allDeployments = await github.paginate(github.repos.listDeployments.endpoint({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: BRANCH_NAME,
            }));
            console.log(`found ${allDeployments.length} deployments for branch ${BRANCH_NAME} (including this one)`);

            const deployments = allDeployments.filter(deployment => deployment.id != THIS_DEPLOYMENT_ID);
            const deploymentCount = deployments.length;

            if (deploymentCount < 1) {
              console.log(`found no previous deployments for this branch`);
              return;
            }

            const deadState = "inactive";
            console.log(`found ${deploymentCount} previous deployments for this branch, marking each ${deadState}`);

            for (const deployment of deployments) {
              await github.repos.createDeploymentStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                deployment_id: deployment.id,
                state: deadState,
              });
            }

      - name: Set spicy-proton deployment status to "success"
        if: github.event.deployment.environment == "spicy-proton"
        uses: avakar/set-deployment-status@v1.1.0
        with:
          state: success
          # Since we're sharing the environment name with other branches, we don't want their deployments to become inactive.
          auto_inactive: false
          environment_url: https://TODO-${{ steps.spicy_proton_name.outputs.result }}.azurewebsites.net/
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Set deployment status to "failure"
        if: failure()
        uses: avakar/set-deployment-status@v1.1.0
        with:
          state: failure
        env:
          GITHUB_TOKEN: ${{ github.token }}

  activate:
    name: "Activate"
    if: github.event.deployment.environment != "spicy-proton"
    runs-on: ubuntu-latest
    steps:
      - name: Set deployment status to "success"
        uses: avakar/set-deployment-status@v1.1.0
        with:
          state: success
          # For non spicy-proton, we want previous deployments to be destroyed.
          auto_inactive: true
          environment_url: https://TODO-.azurewebsites.net/
        env:
          GITHUB_TOKEN: ${{ github.token }}
