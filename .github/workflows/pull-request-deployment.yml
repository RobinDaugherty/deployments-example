---

name: PR Deployment

on:
  deployment:
  pull_request:
    types:
      # Actions that can create the deployment:
      - opened
      - reopened
      - labeled
      - synchronize
      # Actions that cancel/inactivate the deployment:
      - closed
      - unlabeled

jobs:
  create:
    name: "Create Deployment"
    if: |
      github.event_name == 'pull_request' &&
      contains(fromJson('["opened", "reopened", "labeled", "synchronize"]'), github.event.action) &&
      contains(github.event.pull_request.labels.*.name, 'deploy to test')
    runs-on: ubuntu-latest
    steps:
      - name: Cancel any other running deployment workflows
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          workflow_id: pull-request-deployment
          access_token: ${{ github.token }}

      - name: Create bot access token
        # We must use a bot to create the deployment.
        # The workflow run auth token is not able to kick off other workflow runs.
        id: bot_access
        uses: getsentry/action-github-app-token@v1
        with:
          app_id: ${{ secrets.BOT_APP_ID }}
          private_key: ${{ secrets.BOT_PRIVATE_PEM }}

      - name: Create deployment
        uses: avakar/create-deployment@v1.0.2
        id: deployment
        with:
          ref: ${{ github.head_ref }}
          auto_merge: false
          required_contexts:
          environment: test
          transient_environment: true
          description: "Deploy to test environment"
        env:
          GITHUB_TOKEN: ${{ steps.bot_access.outputs.token }}

  destroy:
    name: "Destroy"
    if: |
      github.event_name == 'pull_request' &&
      (
        github.event.action == 'closed' ||
        ! contains(github.event.pull_request.labels.*.name, 'deploy to test')
      )
    runs-on: ubuntu-latest
    steps:
      - name: Cancel any running deployment workflow
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          workflow_id: pull-request-deployment
          access_token: ${{ github.token }}

      - name: Find existing deployment
        id: existing_deployment
        uses: actions/github-script@v4
        with:
          script: |
            const deployments = await github.paginate(github.repos.listDeployments.endpoint({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              environment: "test",
            }))
            return deployments[0]

      # - name: TODO Destroy deployed environment if there is one
      #   if: steps.existing_deployment.outputs.result

      - name: Inactivate deployment
        if: steps.existing_deployment.outputs.result
        uses: avakar/set-deployment-status@v1.1.0
        with:
          deployment_id: steps.existing_deployment.outputs.result.id
          state: inactive
        env:
          GITHUB_TOKEN: ${{ github.token }}

  deploy:
    name: "Deploy"
    if: |
      github.event_name == 'deployment'
    runs-on: ubuntu-latest
    steps:
      - name: Set deployment status to "in progress"
        uses: avakar/set-deployment-status@v1.1.0
        with:
          state: in_progress
          auto_inactive: false # Since multiple PRs can be deployed to the "test" environment
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: TODO Deploy
        run: sleep 30

      - name: Set deployment status to "success"
        uses: avakar/set-deployment-status@v1.1.0
        with:
          state: success
          auto_inactive: false # Since multiple PRs can be deployed to the "test" environment
          environment_url: https://TODO-spicy-proton.azurewebsites.net/
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Set deployment status to "failure"
        if: failure()
        uses: avakar/set-deployment-status@v1.1.0
        with:
          state: failure
          auto_inactive: false # Since multiple PRs can be deployed to the "test" environment
        env:
          GITHUB_TOKEN: ${{ github.token }}
